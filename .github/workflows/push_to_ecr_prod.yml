name: "pushes image to prod ecr repo"

on:
  push:
    branches:
      - "main"

#this action creates a pull request from the main to the main branch
#but before that runs tests to check if there are no conflicts in the push files

jobs:
  #creates and pushes image to an ecr repo
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: mernapp-prod
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg enviroment=production .  
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  # resets service
  reset:
    name: reset
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: reset service
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: 
        aws ecs update-service --cluster esc-app-cluster-production --service esc-app-service-production --force-new-deployment --region us-east-2